basePath: /
definitions:
  models.Subscription:
    properties:
      end_date:
        type: string
      id:
        type: string
      price:
        type: integer
      service_name:
        type: string
      start_date:
        type: string
      user_id:
        type: string
    type: object
  service.CreateSubscriptionDTO:
    properties:
      end_date:
        type: string
      price:
        type: integer
      service_name:
        type: string
      start_date:
        type: string
      user_id:
        type: string
    type: object
  service.UpdateSubscriptionDTO:
    properties:
      end_date:
        type: string
      price:
        type: integer
      service_name:
        type: string
      start_date:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: This is a sample REST API for managing subscriptions.
  title: Subscription Service API
  version: "1.0"
paths:
  /subscriptions:
    post:
      consumes:
      - application/json
      description: Add a new subscription to the database
      parameters:
      - description: Subscription Info
        in: body
        name: subscription
        required: true
        schema:
          $ref: '#/definitions/service.CreateSubscriptionDTO'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Subscription'
        "400":
          description: Неверный формат JSON
          schema:
            type: string
        "500":
          description: Внутренняя ошибка сервера
          schema:
            type: string
      summary: Create a new subscription
      tags:
      - subscriptions
  /subscriptions/{id}:
    delete:
      description: Delete a subscription by its ID
      parameters:
      - description: Subscription ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            type: string
        "400":
          description: Invalid ID format
          schema:
            type: string
        "404":
          description: Subscription not found
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Delete a subscription
      tags:
      - subscriptions
    get:
      description: Get details of a specific subscription
      parameters:
      - description: Subscription ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Subscription'
        "400":
          description: Неверный формат ID
          schema:
            type: string
        "404":
          description: Подписка не найдена
          schema:
            type: string
      summary: Get a subscription by ID
      tags:
      - subscriptions
    put:
      consumes:
      - application/json
      description: Update details of an existing subscription by its ID
      parameters:
      - description: Subscription ID
        in: path
        name: id
        required: true
        type: string
      - description: Subscription data to update
        in: body
        name: subscription
        required: true
        schema:
          $ref: '#/definitions/service.UpdateSubscriptionDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Invalid request format
          schema:
            type: string
        "404":
          description: Subscription not found
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Update an existing subscription
      tags:
      - subscriptions
  /subscriptions/summary:
    get:
      description: Calculates the total price of subscriptions based on optional filters
      parameters:
      - description: Filter by User ID
        in: query
        name: user_id
        type: string
      - description: Filter by Service Name
        in: query
        name: service_name
        type: string
      - description: Filter by start date (YYYY-MM-DD)
        in: query
        name: start_date
        type: string
      - description: Filter by end date (YYYY-MM-DD)
        in: query
        name: end_date
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: integer
            type: object
        "400":
          description: Invalid filter format
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Get summary price of subscriptions
      tags:
      - subscriptions
swagger: "2.0"
